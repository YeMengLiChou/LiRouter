package cn.li.router.compiler.utils

import cn.li.router.compiler.data.AutowiredMeta
import cn.li.router.compiler.data.ServiceMeta
import com.google.devtools.ksp.processing.CodeGenerator
import com.google.devtools.ksp.processing.Dependencies
import com.google.devtools.ksp.processing.KSPLogger


/**
 * 生成 IAutowired 实现类
 * */
fun AutowiredMeta.genIAutowiredImpl(
    codeGenerator: CodeGenerator,
    logger: KSPLogger
) {
    val className = getGenerateClassFileName()
    codeGenerator.createNewFile(
        Dependencies(false),
        Constants.GENERATE_PACKAGE_NAME,
        className,
        "kt"
    )
        .bufferedWriter(Charsets.UTF_8)
        .use { writer ->
            writer.appendLine("package ${Constants.GENERATE_PACKAGE_NAME}")
            writer.appendLine()
            writer.appendLine("/* The file auto generated by LiRouter/Grimrise. Don't edit it! */")
            writer.appendLine("class $className: cn.li.router.api.generate.IAutowired {")
            writer.appendLine("\toverride fun autowired(target: Any?) {")
            writer.appendLine("\t\tval obj = (target as? ${ownerQualifiedName}) ?: return")

            items.forEachIndexed { idx, item ->
                writer.appendLine("\t\tval meta${idx} = ${item.toAutowiredMetaString()}")
                writer.appendLine("\t\tcn.li.router.runtime.AutowiredArgumentsParser.parse<${item.type}>(obj, meta${idx})?.let { obj.${item.fieldName} = it }")
            }
            writer.appendLine("\t}")
            writer.appendLine("}")
        }
    logger.info("[genIAutowiredImpl] file: $className.kt")
}


fun ServiceMeta.genServiceProxy(
    codeGenerator: CodeGenerator,
    logger: KSPLogger
) {
    val dependencies = Dependencies(false, ksFile!!)
    val className = getGenerateClassFileName()
    codeGenerator.createNewFile(dependencies, Constants.GENERATE_PACKAGE_NAME, className, "kt")
       .bufferedWriter(Charsets.UTF_8)
        .use { writer ->
            writer.appendLine("package ${Constants.GENERATE_PACKAGE_NAME}")
            writer.appendLine()
            writer.appendLine("import cn.li.router.api.interfaces.IServiceProvider")
            writer.appendLine()
            writer.appendLine("/* The file auto generated by LiRouter/Grimrise. Don't edit it! */")
            writer.appendLine("class $className: cn.li.router.api.generate.IServiceProxy {")
            if (isSingleton && !isObject) {
                writer.appendLine("\tprivate var service: ${serviceProviderName}? = null")
            }
            writer.appendLine("\toverride fun createService(): IServiceProvider {")
            if (isSingleton && !isObject) {
                writer.appendLine("\t\tif (service == null) {")
                writer.appendLine("\t\t\tservice = ${serviceImplName}()")
                writer.appendLine("\t\t}")
                writer.appendLine("\t\treturn service!!")
            } else {
                if (isObject) {
                    writer.appendLine("\t\treturn $serviceImplName")
                } else {
                    writer.appendLine("\t\treturn ${serviceImplName}()")
                }
            }
            writer.appendLine("\t}")
            writer.appendLine("}")
        }
    logger.info("[genServiceProxy] file: $className.kt")
}